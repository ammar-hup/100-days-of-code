//start of code
#include <iostream>
#include <fstream>
#include <map>
#define MIN-BALANCE 500
using namespace std;

class Account
{
    //class properties
  private:
    long accountnumber;
    string firstname;
    string lastname;
    float balance;
    static long NextAccountNumber;
    //class behaviors
  public:

    //constructors
    Account(){}
    Account(string fname ,string lname ,float balance);
    //Actions
    long getAccno(){return accountnumber;}
    string getFirstName(){return firstname;}
    string getLastName(){return lastname;}
    float getBalance(){return balance;}
    void Debosit(float amount);
    void Withdraw(float amount);
    static void setLastAccountNumber(long accountnumber);
    static long getLastAccountNumber();
    friend ofstream & operator<<(ofstream &ofs,Account &acc);
    friend ifstream & operator>>(ifstream &ifs,Account &acc);
    friend ostream & operator<<(ostream &os,Account &acc);
};
   long Account::NextAccountNumber=0;

class Bank
{
    //class properties
  private:
    map<long,Account> accounts;  //a map structure to store the bank accounts on list

    //class behaviors
  public:

    //constructors
    //Actions
    Account OpenAccount(string fname ,string lname ,float balance);
    Account BalanceEnquiry(long accountNumber);
    Account Diposite(long accountNumber ,float amount);
    Account Withdraw(long accountNumber ,float amount);
    void CloseAccount(long accountNumber);
    void ShowAllAccounts();
    ~Bank();
};
int main()
{
    Bank b;
    Account acc;
    int choice,accnum;
    string fname,lname;
    float balance;
do
{
    //make a menu
cout<<"Banking System\n\n";
cout<<"         Select one Option below\n";
cout<<"         1.Create new Account\n";
cout<<"         2.Sign in Account\n";
cout<<"         3.Diposite Amount\n";
cout<<"         4.Withdraw Amount\n";
cout<<"         5.Balance Enquiry\n";
cout<<"         6.Account Info\n";
cout<<"         7.Show All Accounts\n";
cout<<"         8.close Account\n";
cout<<"         9.Exit\n";
cout<<"Enter your choice";
cin>>choice;
    switch(choice)
    {
case 1:
    cout<<"Enter your first name\n";
        cin>>fname;
    cout<<"Enter your last name\n";
        cin>>lname;
    cout<<"Enter your Balance \n";
        cin>>balance;
    acc=b.OpenAccount(fname,lname,balance);
    cout<<"The Account created \n";
    cout<<acc;
    break;
case 2:

    break;
case 3:
    cout<<"Enter your Account number\n";
    cin>>accnum;
    cout<<"Enter your Balance \n";
    cin>>balance;
    acc=b.Diposite(accnum,balance);
    cout<<acc;
    break;
case 4:

    break;
case 5:
     cout<<"Enter your first name\n";
        cin>>fname;
    cout<<"Enter your last name\n";
        cin>>lname;
    cout<<"Enter your Balance \n";
        cin>>balance;
    acc=b.OpenAccount(fname,lname,balance);
    cout<<"The Account created \n";
    cout<<acc;
    break;

case 6:

    break;
case 7:

    break;
case 8:

    break;
case 9:

    break;
    }

}
while(choice!=7);
return  0;
}
Account::Account(string fname,string lname,float bal)
{
    NextAccountNumber++;
    accountnumber=NextAccountNumber;
    firstname=fname;
    lastname=lname;
    balance=bal;
}
